{"version":3,"file":"default-src_app_add-transaction_add-transaction_page_ts.js","mappings":"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","sources":["./node_modules/uuid/dist/esm-browser/regex.js","./node_modules/uuid/dist/esm-browser/rng.js","./node_modules/uuid/dist/esm-browser/stringify.js","./node_modules/uuid/dist/esm-browser/v4.js","./node_modules/uuid/dist/esm-browser/validate.js","./src/app/add-transaction/add-transaction.page.ts","./src/app/api/account.service.ts","./src/app/model/accounts.ts","./src/app/model/transaction.ts","./src/app/add-transaction/add-transaction.page.html"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AccountService } from '../api/account.service';\nimport { Account } from '../model/account';\nimport { Transaction } from '../model/transaction';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ModalController } from '@ionic/angular';\nimport { Challan } from '../model/challan';\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.page.html',\n  styleUrls: ['./add-transaction.page.scss'],\n})\nexport class AddTransactionPage {\n\n  static LastPickedDate: string = new Date().toISOString();\n\n  public pickedDate: string = new Date().toISOString();\n  public account: Account;\n  public transaction: Transaction;\n  public selectedTransactionType = 'Dr';\n  public billNumber: number;\n\n  public amountFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[+-]?([0-9]+\\.?[0-9]*|\\.[0-9]+)$\")]);\n  public descriptionFormControl = new FormControl('', [\n    Validators.required]);\n\n  public challanNoFormControl = new FormControl('', [\n    Validators.required]);\n  public challanDescFormControl = new FormControl('', [\n    Validators.required]);\n  public challanWeightFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[+-]?([0-9]+\\.?[0-9]*|\\.[0-9]+)$\")]);\n  public challanRateFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[+-]?([0-9]+\\.?[0-9]*|\\.[0-9]+)$\")]);\n\n  public challanDetail: Challan[] = []  \n  \n\n  constructor(public accountService: AccountService, private modalController: ModalController) { }\n\n  public ngOnInit() {\n\n    if (this.transaction) {\n      this.amountFormControl.setValue(this.transaction.amount + '');\n      this.descriptionFormControl.setValue(this.transaction.description);\n      this.pickedDate = this.transaction.date\n      this.selectedTransactionType = this.transaction.type;\n      this.challanDetail = this.transaction.challanDetail ?? [];\n      this.billNumber = this.transaction.billNo;\n    } else {\n      this.pickedDate = AddTransactionPage.LastPickedDate;\n    }\n  }\n\n  public onDateChange() {\n    // if(this.pickedDate) {}    \n  }\n\n  public onAddClick() {\n    let isUpdate = this.transaction ? true : false;\n    let transaction = isUpdate ? this.transaction : new Transaction();\n    transaction.id = isUpdate ? transaction.id : uuidv4();\n    transaction.amount = Number(this.amountFormControl.value.trim());\n    transaction.description = this.descriptionFormControl.value.trim();\n    transaction.date = this.pickedDate;\n    transaction.type = this.selectedTransactionType;\n    transaction.challanDetail = this.challanDetail;\n    \n    if (!transaction.billNo && this.billNumber) {\n      this.accountService.accounts.currentBillNumber = this.accountService.accounts.currentBillNumber + 1;\n    }\n\n    transaction.billNo = this.billNumber;\n\n    if (isUpdate) {\n      this.accountService.updateTransaction(this.account.id, transaction);\n    } else {\n      this.accountService.addTransaction(this.account.id, transaction);\n    } \n\n    AddTransactionPage.LastPickedDate = this.pickedDate;\n    this.modalController.dismiss();\n  }\n\n  public onDeleteClick(account: Account, transaction: Transaction) {\n    this.accountService.removeTransaction(account.id, transaction.id);\n    this.modalController.dismiss();\n  }\n\n  public onAddChallanClick() {\n    let challan = new Challan();\n    challan.number = this.challanNoFormControl.value.trim();\n    challan.description = this.challanDescFormControl.value.trim();\n    challan.weight = Number(this.challanWeightFormControl.value.trim());\n    challan.rate = Number(this.challanRateFormControl.value.trim());\n\n    this.challanDetail.push(challan);\n\n    this.challanNoFormControl.reset();\n    this.challanDescFormControl.reset();\n    this.challanWeightFormControl.reset();\n    this.challanRateFormControl.reset();\n  }\n\n  public isValidInfo(): boolean {\n    let isValid = !this.amountFormControl.invalid && this.amountFormControl.value.trim().length > 0;\n    // isValid = isValid && !this.descriptionFormControl.invalid && this.descriptionFormControl.value.trim().length > 0;\n\n    return isValid;\n  }\n\n  public isValidChallanInfo(): boolean {\n    let isValid = !this.challanNoFormControl.invalid && this.challanNoFormControl.value.trim().length > 0;\n    isValid = isValid && !this.challanDescFormControl.invalid && this.challanDescFormControl.value.trim().length > 0;\n    isValid = isValid && !this.challanWeightFormControl.invalid && this.challanWeightFormControl.value.trim().length > 0;\n    isValid = isValid && !this.challanRateFormControl.invalid && this.challanRateFormControl.value.trim().length > 0;\n\n    return isValid;\n  }\n\n  public onTypeSelectionChange(event: any) {\n    this.selectedTransactionType = event.detail.value;\n  }\n\n  public onGenerateBill() {\n    if (this.accountService.accounts.currentBillNumber == null || this.accountService.accounts.currentBillNumber == undefined) {\n      this.accountService.accounts.currentBillNumber = 0;\n    }\n    this.billNumber = this.accountService.accounts.currentBillNumber + 1;\n  }\n\n  public onCloseClick() {\n    this.modalController.dismiss();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Account } from '../model/account';\nimport { Accounts } from '../model/accounts';\nimport { Transaction } from '../model/transaction';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  public accounts: Accounts = new Accounts();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getAccounts(): Observable<Accounts> {\n    const menuFilePath = `./assets/json/accounts.json`;\n    return this.httpClient.get<Accounts>(menuFilePath);\n  }\n\n  public updateLabel(label: string) {\n    this.accounts.label = label;\n  }\n\n  public addAccount(account: Account) {\n    // debugger\n    this.accounts.accounts.push(account);\n  }\n\n  public removeAccount(accountId: string) {\n    this.accounts.accounts = this.accounts.accounts.filter(account => account.id !== accountId);\n  }\n\n  public addTransaction(accountId: string, transaction: Transaction) {\n    let account = this.accounts.accounts.filter(account => account.id === accountId)[0];\n    account.transactions.push(transaction);\n    this.sortTransactions(accountId);\n  }\n\n  public updateTransaction(accountId: string, transaction: Transaction) {\n    this.removeTransaction(accountId, transaction.id);\n    this.addTransaction(accountId, transaction);\n    this.sortTransactions(accountId);\n  }\n\n  public removeTransaction(accountId: string, transactionId: string) {\n    let account = this.accounts.accounts.filter(account => account.id === accountId)[0];\n    account.transactions = account.transactions.filter(transaction => transaction.id !== transactionId);\n  }\n\n  public updateAllAccountsBalance() {\n    this.accounts.accounts = this.accounts.accounts.map<Account>(account => {\n      this.updateBalance(account);\n      return account;\n    });\n  }\n\n  public updateBalance(account: Account) {\n    let originalAccount = this.accounts.accounts.find(item => item.id === account.id)\n    let openingBalance = originalAccount.openingBalanceType === 'Cr' ? originalAccount.openingBalance : -originalAccount.openingBalance;\n    originalAccount.balance = openingBalance;\n    \n    for(let i = 0; i < originalAccount.transactions.length; i++) {\n      let transaction = originalAccount.transactions[i];\n      let transactionAmount = transaction.type === 'Cr' ? transaction.amount : -transaction.amount;\n      if (i === 0) {\n        transaction.balance = openingBalance + transactionAmount;\n      } else {\n        transaction.balance = originalAccount.transactions[i - 1].balance + transactionAmount;\n      }\n      \n      originalAccount.balance = transaction.balance;\n    }\n\n    this.updateTotalBalance();\n  }\n\n  private updateTotalBalance() {\n    function getSum(total, num) {\n      return total + num;\n    }\n    this.accounts.totalBalance = this.accounts.accounts.map(account => account.balance).reduce(getSum, 0);\n  }\n\n  private sortTransactions(accountId: string) {\n    let account = this.accounts.accounts.filter(account => account.id === accountId)[0];\n    account.transactions.sort(function(a,b){\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n  }\n\n}\n","import { Account } from \"./account\";\n\nexport class Accounts {\n    public label: string;\n    public accounts: Account[];\n    public totalBalance: number;\n    public currentBillNumber: number;\n}","import { Challan } from \"./challan\";\n\nexport class Transaction {\n    public id: string;\n    public type: string;\n    public amount: number;\n    public date: string;\n    public description: string;\n    public balance: number;\n    public challanDetail: Challan[];\n    public billNo: number;\n}","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title mode=\\\"md\\\">Transaction</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button size=\\\"small\\\" fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"onAddClick()\\\" [disabled]=\\\"!isValidInfo()\\\">\\n        Save\\n        <ion-icon slot=\\\"end\\\" name=\\\"checkmark-done-outline\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button size=\\\"small\\\" fill=\\\"outline\\\" color=\\\"primary\\\" (click)=\\\"onCloseClick()\\\">\\n        Cancel\\n        <ion-icon slot=\\\"end\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button size=\\\"small\\\" color=\\\"danger\\\" (click)=\\\"onDeleteClick(account, transaction)\\\">\\n        <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form>\\n        <ion-row>\\n          <ion-col class=\\\"ion-align-self-center\\\">\\n            <ion-label>Date</ion-label>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-right\\\">            \\n              <ion-button size=\\\"small\\\" id=\\\"open-modal\\\">{{pickedDate | date: 'dd/MM/yyyy'}}</ion-button>\\n              <ion-modal trigger=\\\"open-modal\\\">\\n                <ng-template>\\n                  <ion-datetime cancelText=\\\"Cancel\\\" doneText=\\\"OK\\\" placeholder=\\\"Date\\\" name=\\\"datepicker\\\"\\n                      class=\\\"ion-float-left\\\" \\n                      [(ngModel)]=\\\"pickedDate\\\"\\n                      (ionChange)=\\\"onDateChange()\\\">\\n                    </ion-datetime>\\n                </ng-template>\\n              </ion-modal>\\n          </ion-col>\\n          <div class=\\\"divider\\\"></div>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label>Description</ion-label>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-right\\\">\\n            <input class=\\\"description\\\" list=\\\"MostUsed\\\"  placeholder=\\\"Description\\\" [formControl]=\\\"descriptionFormControl\\\">\\n            <datalist id=\\\"MostUsed\\\">\\n                <option value=\\\"By Cheque\\\"></option>\\n                <option value=\\\"By Cheque (Self)\\\"></option>\\n                <option value=\\\"By Cash\\\"></option>\\n                <option value=\\\"By Cheque + Cash\\\"></option>\\n                <option value=\\\"Discount\\\"></option>\\n            </datalist>\\n          </ion-col>\\n          <div class=\\\"divider\\\"></div>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-label>Amount</ion-label>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-right\\\">\\n            <ion-input class=\\\"amount\\\" placeholder=\\\"Amount\\\" [formControl]=\\\"amountFormControl\\\"></ion-input>\\n          </ion-col>\\n          <div class=\\\"divider\\\"></div>\\n        </ion-row>\\n          <ion-row>\\n            <ion-col class=\\\"\\\">\\n                <ion-label>Type</ion-label>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\" class=\\\"ion-text-right\\\">\\n              <ion-radio-group (ionChange)=\\\"onTypeSelectionChange($event)\\\" [value]=\\\"selectedTransactionType\\\">\\n              <ion-row>\\n                <ion-col class=\\\"ion-no-padding ion-text-right\\\" size=\\\"6\\\">\\n                  <ion-label><b>Cr</b></ion-label>\\n                    <ion-radio value=\\\"Cr\\\"></ion-radio>\\n                </ion-col>\\n                <ion-col class=\\\"ion-no-padding ion-text-right\\\" size=\\\"6\\\">\\n                    <ion-label><b>Dr</b></ion-label>\\n                    <ion-radio value=\\\"Dr\\\"></ion-radio>\\n                </ion-col>\\n              </ion-row>\\n            </ion-radio-group>\\n            </ion-col>\\n            <div class=\\\"divider\\\"></div>\\n          </ion-row>\\n      <div class=\\\"challan-section\\\">\\n        <ion-row class=\\\"challan-row\\\">\\n          <ion-col *ngIf=\\\"!billNumber\\\" class=\\\"ion-text-right\\\">\\n            <ion-button size=\\\"small\\\" color=\\\"primary\\\" fill=\\\"outline\\\" (click)=\\\"onGenerateBill()\\\" [disabled]=\\\"challanDetail.length <= 0\\\">\\n              Generate Bill No\\n            </ion-button>\\n          </ion-col>\\n          <ion-col *ngIf=\\\"billNumber\\\" class=\\\"ion-text-right\\\">\\n            <b>Bill No: {{billNumber}}</b>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"challan-row\\\">\\n          <ion-col>\\n            Challan Detail:\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngFor=\\\"let challan of challanDetail\\\">\\n          <ion-col class=\\\"\\\" size=\\\"2\\\"><b>{{challan.number}}</b></ion-col>\\n          <ion-col class=\\\"\\\" size=\\\"4\\\"><b>{{challan.description}}</b></ion-col>\\n          <ion-col class=\\\"ion-text-center\\\" size=\\\"3\\\"><b>{{challan.weight}}</b></ion-col>\\n          <ion-col class=\\\"ion-text-center\\\" size=\\\"3\\\"><b>{{challan.rate}}</b></ion-col>\\n          <div class=\\\"divider\\\"></div>\\n        </ion-row>\\n        <ion-row class=\\\"challan-row\\\">\\n          <ion-col class=\\\"\\\" size=\\\"2\\\">\\n            <ion-input class=\\\"challan\\\" placeholder=\\\"Ch. No.\\\" [formControl]=\\\"challanNoFormControl\\\"></ion-input>\\n          </ion-col>\\n          <ion-col class=\\\"\\\" size=\\\"4\\\">\\n            <ion-input class=\\\"challan\\\" placeholder=\\\"Description\\\" [formControl]=\\\"challanDescFormControl\\\"></ion-input>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-center\\\" size=\\\"3\\\">\\n            <ion-input class=\\\"challan\\\" placeholder=\\\"Weight(Kg)\\\" [formControl]=\\\"challanWeightFormControl\\\"></ion-input>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-center\\\" size=\\\"3\\\">\\n            <ion-input class=\\\"challan\\\" placeholder=\\\"Rate/ Kg\\\" [formControl]=\\\"challanRateFormControl\\\"></ion-input>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"challan-row\\\">\\n          <ion-col class=\\\"ion-text-right\\\">\\n            <ion-button size=\\\"small\\\" color=\\\"primary\\\" fill=\\\"outline\\\" (click)=\\\"onAddChallanClick()\\\" [disabled]=\\\"!isValidChallanInfo()\\\">\\n              Add\\n              <ion-icon name=\\\"add-circle-outline\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </div>\\n      <!-- <div class=\\\"divider\\\"></div> -->\\n    <!-- </ion-list> -->\\n  </form>\\n</ion-content>\\n<!-- <ion-footer>\\n  <ion-toolbar>\\n    \\n  </ion-toolbar>\\n</ion-footer> -->\\n\";"],"names":[],"sourceRoot":"webpack:///"}