{"version":3,"file":"node_modules_uuid_dist_esm-browser_v4_js-src_app_add-account_add-account_module_ts-src_app_ap-e8c3d3.js","mappings":";;;;;;;;;;;;;AAAA,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;ACApI;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AClBqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,0gBAA0gB;AAC1gB;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;AC7BG;AACY;;AAEvC;AACA;AACA,+CAA+C,+CAAG,KAAK;;AAEvD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,yDAAS;AAClB;;AAEA,iEAAe,EAAE;;;;;;;;;;;;;;;ACvBc;;AAE/B;AACA,qCAAqC,sDAAU;AAC/C;;AAEA,iEAAe,QAAQ;;;;;;;;;;;;;;;;;;;ACNkB;AACc;AAEH;AAEpD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAc;KAC1B;CACF,CAAC;IAMW,2BAA2B,SAA3B,2BAA2B;CAAG;AAA9B,2BAA2B;IAJvC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACmB;AAErB;AAE8B;AAEvB;IAYvC,oBAAoB,SAApB,oBAAoB;CAAG;AAAvB,oBAAoB;IAVhC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,oFAA2B;SAC5B;QACD,YAAY,EAAE,CAAC,6DAAc,CAAC;KAC/B,CAAC;GACW,oBAAoB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;ACpBiB;AACP;AAGE;IAMhC,cAAc,SAAd,cAAc;IAIzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAFnC,aAAQ,GAAa,IAAI,qDAAQ,EAAE,CAAC;IAEG,CAAC;IAExC,WAAW;QAChB,MAAM,YAAY,GAAG,6BAA6B,CAAC;QACnD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,YAAY,CAAC,CAAC;IACrD,CAAC;IAEM,WAAW,CAAC,KAAa;QAC9B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEM,UAAU,CAAC,OAAgB;QAChC,WAAW;QACX,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAEM,aAAa,CAAC,SAAiB;QACpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;IAC9F,CAAC;IAEM,cAAc,CAAC,SAAiB,EAAE,WAAwB;QAC/D,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAEM,iBAAiB,CAAC,SAAiB,EAAE,WAAwB;QAClE,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QAC5C,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAEM,iBAAiB,CAAC,SAAiB,EAAE,aAAqB;QAC/D,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,KAAK,aAAa,CAAC,CAAC;IACtG,CAAC;IAEM,wBAAwB;QAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAU,OAAO,CAAC,EAAE;YACrE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC5B,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,OAAgB;QACnC,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,CAAC;QACjF,IAAI,cAAc,GAAG,eAAe,CAAC,kBAAkB,KAAK,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC;QACpI,eAAe,CAAC,OAAO,GAAG,cAAc,CAAC;QAEzC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3D,IAAI,WAAW,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,iBAAiB,GAAG,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC;YAC7F,IAAI,CAAC,KAAK,CAAC,EAAE;gBACX,WAAW,CAAC,OAAO,GAAG,cAAc,GAAG,iBAAiB,CAAC;aAC1D;iBAAM;gBACL,WAAW,CAAC,OAAO,GAAG,eAAe,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,iBAAiB,CAAC;aACvF;YAED,eAAe,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;SAC/C;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEO,kBAAkB;QACxB,SAAS,MAAM,CAAC,KAAK,EAAE,GAAG;YACxB,OAAO,KAAK,GAAG,GAAG,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACxG,CAAC;IAEO,gBAAgB,CAAC,SAAiB;QACxC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACpF,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAS,CAAC,EAAC,CAAC;YACpC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;QACjE,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA5FQ,4DAAU;;AAUN,cAAc;IAH1B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAkF1B;AAlF0B;;;;;;;;;;;;;;;ACRpB,MAAM,QAAQ;CAKpB","sources":["./node_modules/uuid/dist/esm-browser/regex.js","./node_modules/uuid/dist/esm-browser/rng.js","./node_modules/uuid/dist/esm-browser/stringify.js","./node_modules/uuid/dist/esm-browser/v4.js","./node_modules/uuid/dist/esm-browser/validate.js","./src/app/add-account/add-account-routing.module.ts","./src/app/add-account/add-account.module.ts","./src/app/api/account.service.ts","./src/app/model/accounts.ts"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddAccountPage } from './add-account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddAccountPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddAccountPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddAccountPageRoutingModule } from './add-account-routing.module';\n\nimport { AddAccountPage } from './add-account.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AddAccountPageRoutingModule\n  ],\n  declarations: [AddAccountPage]\n})\nexport class AddAccountPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Account } from '../model/account';\nimport { Accounts } from '../model/accounts';\nimport { Transaction } from '../model/transaction';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  public accounts: Accounts = new Accounts();\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getAccounts(): Observable<Accounts> {\n    const menuFilePath = `./assets/json/accounts.json`;\n    return this.httpClient.get<Accounts>(menuFilePath);\n  }\n\n  public updateLabel(label: string) {\n    this.accounts.label = label;\n  }\n\n  public addAccount(account: Account) {\n    // debugger\n    this.accounts.accounts.push(account);\n  }\n\n  public removeAccount(accountId: string) {\n    this.accounts.accounts = this.accounts.accounts.filter(account => account.id !== accountId);\n  }\n\n  public addTransaction(accountId: string, transaction: Transaction) {\n    let account = this.accounts.accounts.filter(account => account.id === accountId)[0];\n    account.transactions.push(transaction);\n    this.sortTransactions(accountId);\n  }\n\n  public updateTransaction(accountId: string, transaction: Transaction) {\n    this.removeTransaction(accountId, transaction.id);\n    this.addTransaction(accountId, transaction);\n    this.sortTransactions(accountId);\n  }\n\n  public removeTransaction(accountId: string, transactionId: string) {\n    let account = this.accounts.accounts.filter(account => account.id === accountId)[0];\n    account.transactions = account.transactions.filter(transaction => transaction.id !== transactionId);\n  }\n\n  public updateAllAccountsBalance() {\n    this.accounts.accounts = this.accounts.accounts.map<Account>(account => {\n      this.updateBalance(account);\n      return account;\n    });\n  }\n\n  public updateBalance(account: Account) {\n    let originalAccount = this.accounts.accounts.find(item => item.id === account.id)\n    let openingBalance = originalAccount.openingBalanceType === 'Cr' ? originalAccount.openingBalance : -originalAccount.openingBalance;\n    originalAccount.balance = openingBalance;\n    \n    for(let i = 0; i < originalAccount.transactions.length; i++) {\n      let transaction = originalAccount.transactions[i];\n      let transactionAmount = transaction.type === 'Cr' ? transaction.amount : -transaction.amount;\n      if (i === 0) {\n        transaction.balance = openingBalance + transactionAmount;\n      } else {\n        transaction.balance = originalAccount.transactions[i - 1].balance + transactionAmount;\n      }\n      \n      originalAccount.balance = transaction.balance;\n    }\n\n    this.updateTotalBalance();\n  }\n\n  private updateTotalBalance() {\n    function getSum(total, num) {\n      return total + num;\n    }\n    this.accounts.totalBalance = this.accounts.accounts.map(account => account.balance).reduce(getSum, 0);\n  }\n\n  private sortTransactions(accountId: string) {\n    let account = this.accounts.accounts.filter(account => account.id === accountId)[0];\n    account.transactions.sort(function(a,b){\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n  }\n\n}\n","import { Account } from \"./account\";\n\nexport class Accounts {\n    public label: string;\n    public accounts: Account[];\n    public totalBalance: number;\n    public currentBillNumber: number;\n}"],"names":[],"sourceRoot":"webpack:///"}